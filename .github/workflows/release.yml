env:
  IMAGE_NAME: signal-cli
  IMAGE_REGISTRY: ghcr.io/asamk
  REGISTRY_PASSWORD: ${{ github.token }}
  REGISTRY_USER: ${{ github.actor }}
jobs:
  build-container:
    needs: ci_wf
    permissions:
      contents: read
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Download signal-cli build from CI workflow
      uses: actions/download-artifact@v3
    - continue-on-error: true
      id: cli_ver
      name: Get signal-cli version
      run: 'ver="${GITHUB_REF_NAME#v}"

        echo "version=${ver}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      name: Move archive file
      run: 'ARCHIVE_DIR=$(ls signal-cli-archive-*/ -d | tail -n1)

        tar xf ./"${ARCHIVE_DIR}"/*.tar.gz

        rm -r signal-cli-archive-* signal-cli-native

        mkdir -p build/install/

        mv ./signal-cli-*/ build/install/signal-cli

        '
    - continue-on-error: true
      id: build_image
      name: Build Image
      uses: redhat-actions/buildah-build@v2
      with:
        containerfiles: ./Containerfile
        image: ${{ env.IMAGE_NAME }}
        oci: true
        tags: latest ${{ github.sha }} ${{ steps.cli_ver.outputs.version }}
    - continue-on-error: true
      id: push
      name: Push To GHCR
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build_image.outputs.image }}
        password: ${{ env.REGISTRY_PASSWORD }}
        registry: ${{ env.IMAGE_REGISTRY }}
        tags: ${{ steps.build_image.outputs.tags }}
        username: ${{ env.REGISTRY_USER }}
    - continue-on-error: true
      name: Echo outputs
      run: 'echo "${{ toJSON(steps.push.outputs) }}"

        '
  build-container-native:
    needs: ci_wf
    permissions:
      contents: read
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Download signal-cli build from CI workflow
      uses: actions/download-artifact@v3
    - continue-on-error: true
      id: cli_ver
      name: Get signal-cli version
      run: 'ver="${GITHUB_REF_NAME#v}"

        echo "version=${ver}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      name: Move archive file
      run: 'mkdir -p build/native/nativeCompile/

        chmod +x ./signal-cli-native/signal-cli

        mv ./signal-cli-native/signal-cli build/native/nativeCompile/

        '
    - continue-on-error: true
      id: build_image
      name: Build Image
      uses: redhat-actions/buildah-build@v2
      with:
        containerfiles: ./native.Containerfile
        image: ${{ env.IMAGE_NAME }}
        oci: true
        tags: latest-native ${{ github.sha }}-native ${{ steps.cli_ver.outputs.version
          }}-native
    - continue-on-error: true
      id: push
      name: Push To GHCR
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build_image.outputs.image }}
        password: ${{ env.REGISTRY_PASSWORD }}
        registry: ${{ env.IMAGE_REGISTRY }}
        tags: ${{ steps.build_image.outputs.tags }}
        username: ${{ env.REGISTRY_USER }}
    - continue-on-error: true
      name: Echo outputs
      run: 'echo "${{ toJSON(steps.push.outputs) }}"

        '
  ci_wf:
    permissions:
      contents: write
    uses: AsamK/signal-cli/.github/workflows/ci.yml@master
  lib_to_jar:
    needs: ci_wf
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      signal_cli_version: ${{ steps.cli_ver.outputs.version }}
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download signal-cli build from CI workflow
      uses: actions/download-artifact@v3
    - continue-on-error: true
      id: cli_ver
      name: Get signal-cli version
      run: 'ver="${GITHUB_REF_NAME#v}"

        echo "version=${ver}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      name: Extract archive
      run: 'tree .

        ARCHIVE_DIR=$(ls signal-cli-archive-*/ -d | tail -n1)

        tar -xzf ./"${ARCHIVE_DIR}"/*.tar.gz

        mv ./"${ARCHIVE_DIR}"/*.tar.gz signal-cli-${{ steps.cli_ver.outputs.version
        }}.tar.gz

        rm -rf signal-cli-archive-*/

        '
    - continue-on-error: true
      env:
        SIGNAL_CLI_VER: ${{ steps.cli_ver.outputs.version }}
      name: Compress native app
      run: 'chmod +x signal-cli-native/signal-cli

        tar -czf signal-cli-${SIGNAL_CLI_VER}-Linux-native.tar.gz -C signal-cli-native
        signal-cli

        rm -rf signal-cli-native/

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: create_release
      name: Create release
      uses: actions/create-release@v1
      with:
        draft: true
        release_name: v${{ steps.cli_ver.outputs.version }}
        tag_name: v${{ steps.cli_ver.outputs.version }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Upload archive
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/x-compressed-tar
        asset_name: signal-cli-${{ steps.cli_ver.outputs.version }}.tar.gz
        asset_path: signal-cli-${{ steps.cli_ver.outputs.version }}.tar.gz
        upload_url: ${{ steps.create_release.outputs.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Upload Linux native archive
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/x-compressed-tar
        asset_name: signal-cli-${{ steps.cli_ver.outputs.version }}-Linux-native.tar.gz
        asset_path: signal-cli-${{ steps.cli_ver.outputs.version }}-Linux-native.tar.gz
        upload_url: ${{ steps.create_release.outputs.upload_url }}
name: release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
permissions:
  contents: write
